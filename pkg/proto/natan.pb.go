// Code generated by protoc-gen-go. DO NOT EDIT.
// source: natan.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node version
	Version uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Node value
	Values               [][]byte `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Node) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Node) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type ListRequest struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Skip                 uint32   `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Version              uint64   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{1}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListRequest) GetSkip() uint32 {
	if m != nil {
		return m.Skip
	}
	return 0
}

func (m *ListRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PagedNodeList struct {
	// Current DB version
	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Total count of nodes
	TotalCount uint32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Array of nodes
	Nodes                []*Node  `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagedNodeList) Reset()         { *m = PagedNodeList{} }
func (m *PagedNodeList) String() string { return proto.CompactTextString(m) }
func (*PagedNodeList) ProtoMessage()    {}
func (*PagedNodeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{2}
}

func (m *PagedNodeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagedNodeList.Unmarshal(m, b)
}
func (m *PagedNodeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagedNodeList.Marshal(b, m, deterministic)
}
func (m *PagedNodeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagedNodeList.Merge(m, src)
}
func (m *PagedNodeList) XXX_Size() int {
	return xxx_messageInfo_PagedNodeList.Size(m)
}
func (m *PagedNodeList) XXX_DiscardUnknown() {
	xxx_messageInfo_PagedNodeList.DiscardUnknown(m)
}

var xxx_messageInfo_PagedNodeList proto.InternalMessageInfo

func (m *PagedNodeList) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PagedNodeList) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *PagedNodeList) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type DBVersion struct {
	// Current DB version
	Version              uint64   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBVersion) Reset()         { *m = DBVersion{} }
func (m *DBVersion) String() string { return proto.CompactTextString(m) }
func (*DBVersion) ProtoMessage()    {}
func (*DBVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{3}
}

func (m *DBVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBVersion.Unmarshal(m, b)
}
func (m *DBVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBVersion.Marshal(b, m, deterministic)
}
func (m *DBVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBVersion.Merge(m, src)
}
func (m *DBVersion) XXX_Size() int {
	return xxx_messageInfo_DBVersion.Size(m)
}
func (m *DBVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_DBVersion.DiscardUnknown(m)
}

var xxx_messageInfo_DBVersion proto.InternalMessageInfo

func (m *DBVersion) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type GetRequest struct {
	// Node key
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{4}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SetValueRequest struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node value
	Values               [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetValueRequest) Reset()         { *m = SetValueRequest{} }
func (m *SetValueRequest) String() string { return proto.CompactTextString(m) }
func (*SetValueRequest) ProtoMessage()    {}
func (*SetValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{5}
}

func (m *SetValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetValueRequest.Unmarshal(m, b)
}
func (m *SetValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetValueRequest.Marshal(b, m, deterministic)
}
func (m *SetValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetValueRequest.Merge(m, src)
}
func (m *SetValueRequest) XXX_Size() int {
	return xxx_messageInfo_SetValueRequest.Size(m)
}
func (m *SetValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetValueRequest proto.InternalMessageInfo

func (m *SetValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetValueRequest) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type AddValueRequest struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node value
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddValueRequest) Reset()         { *m = AddValueRequest{} }
func (m *AddValueRequest) String() string { return proto.CompactTextString(m) }
func (*AddValueRequest) ProtoMessage()    {}
func (*AddValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{6}
}

func (m *AddValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddValueRequest.Unmarshal(m, b)
}
func (m *AddValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddValueRequest.Marshal(b, m, deterministic)
}
func (m *AddValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddValueRequest.Merge(m, src)
}
func (m *AddValueRequest) XXX_Size() int {
	return xxx_messageInfo_AddValueRequest.Size(m)
}
func (m *AddValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddValueRequest proto.InternalMessageInfo

func (m *AddValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddValueRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type AddUniqueValueRequest struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node value
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUniqueValueRequest) Reset()         { *m = AddUniqueValueRequest{} }
func (m *AddUniqueValueRequest) String() string { return proto.CompactTextString(m) }
func (*AddUniqueValueRequest) ProtoMessage()    {}
func (*AddUniqueValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{7}
}

func (m *AddUniqueValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUniqueValueRequest.Unmarshal(m, b)
}
func (m *AddUniqueValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUniqueValueRequest.Marshal(b, m, deterministic)
}
func (m *AddUniqueValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUniqueValueRequest.Merge(m, src)
}
func (m *AddUniqueValueRequest) XXX_Size() int {
	return xxx_messageInfo_AddUniqueValueRequest.Size(m)
}
func (m *AddUniqueValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUniqueValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUniqueValueRequest proto.InternalMessageInfo

func (m *AddUniqueValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AddUniqueValueRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RemoveValueRequest struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node value
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveValueRequest) Reset()         { *m = RemoveValueRequest{} }
func (m *RemoveValueRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveValueRequest) ProtoMessage()    {}
func (*RemoveValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{8}
}

func (m *RemoveValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveValueRequest.Unmarshal(m, b)
}
func (m *RemoveValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveValueRequest.Marshal(b, m, deterministic)
}
func (m *RemoveValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveValueRequest.Merge(m, src)
}
func (m *RemoveValueRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveValueRequest.Size(m)
}
func (m *RemoveValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveValueRequest proto.InternalMessageInfo

func (m *RemoveValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RemoveValueRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RemoveAllValuesRequest struct {
	// Node key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Node value
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAllValuesRequest) Reset()         { *m = RemoveAllValuesRequest{} }
func (m *RemoveAllValuesRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveAllValuesRequest) ProtoMessage()    {}
func (*RemoveAllValuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{9}
}

func (m *RemoveAllValuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAllValuesRequest.Unmarshal(m, b)
}
func (m *RemoveAllValuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAllValuesRequest.Marshal(b, m, deterministic)
}
func (m *RemoveAllValuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAllValuesRequest.Merge(m, src)
}
func (m *RemoveAllValuesRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveAllValuesRequest.Size(m)
}
func (m *RemoveAllValuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAllValuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAllValuesRequest proto.InternalMessageInfo

func (m *RemoveAllValuesRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RemoveAllValuesRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RemoveKeyRequest struct {
	// Node key
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveKeyRequest) Reset()         { *m = RemoveKeyRequest{} }
func (m *RemoveKeyRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveKeyRequest) ProtoMessage()    {}
func (*RemoveKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{10}
}

func (m *RemoveKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveKeyRequest.Unmarshal(m, b)
}
func (m *RemoveKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveKeyRequest.Marshal(b, m, deterministic)
}
func (m *RemoveKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveKeyRequest.Merge(m, src)
}
func (m *RemoveKeyRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveKeyRequest.Size(m)
}
func (m *RemoveKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveKeyRequest proto.InternalMessageInfo

func (m *RemoveKeyRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *None) Reset()         { *m = None{} }
func (m *None) String() string { return proto.CompactTextString(m) }
func (*None) ProtoMessage()    {}
func (*None) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c126bbc86dd711b, []int{11}
}

func (m *None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_None.Unmarshal(m, b)
}
func (m *None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_None.Marshal(b, m, deterministic)
}
func (m *None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_None.Merge(m, src)
}
func (m *None) XXX_Size() int {
	return xxx_messageInfo_None.Size(m)
}
func (m *None) XXX_DiscardUnknown() {
	xxx_messageInfo_None.DiscardUnknown(m)
}

var xxx_messageInfo_None proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterType((*ListRequest)(nil), "ListRequest")
	proto.RegisterType((*PagedNodeList)(nil), "PagedNodeList")
	proto.RegisterType((*DBVersion)(nil), "DBVersion")
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*SetValueRequest)(nil), "SetValueRequest")
	proto.RegisterType((*AddValueRequest)(nil), "AddValueRequest")
	proto.RegisterType((*AddUniqueValueRequest)(nil), "AddUniqueValueRequest")
	proto.RegisterType((*RemoveValueRequest)(nil), "RemoveValueRequest")
	proto.RegisterType((*RemoveAllValuesRequest)(nil), "RemoveAllValuesRequest")
	proto.RegisterType((*RemoveKeyRequest)(nil), "RemoveKeyRequest")
	proto.RegisterType((*None)(nil), "None")
}

func init() { proto.RegisterFile("natan.proto", fileDescriptor_3c126bbc86dd711b) }

var fileDescriptor_3c126bbc86dd711b = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdf, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x93, 0xde, 0x5d, 0xd2, 0xcc, 0xa5, 0x4d, 0x1c, 0x6b, 0x3c, 0x22, 0x68, 0x5c, 0xac,
	0x06, 0x84, 0x05, 0xdb, 0x27, 0x51, 0xd0, 0x54, 0xa1, 0xa0, 0x22, 0x72, 0xc5, 0x3e, 0xf8, 0x22,
	0x67, 0x6f, 0x2c, 0x4b, 0xaf, 0xbb, 0x69, 0x6e, 0x13, 0xec, 0xab, 0x7f, 0xb9, 0xec, 0xde, 0x25,
	0xf7, 0xa3, 0x0d, 0xd2, 0x3c, 0xdd, 0xce, 0xf0, 0x9d, 0xef, 0xce, 0xce, 0x67, 0x38, 0xf0, 0x65,
	0xa4, 0x23, 0xc9, 0xa7, 0x33, 0xa5, 0x15, 0xfb, 0x04, 0xee, 0x57, 0x15, 0x13, 0xf6, 0xc1, 0xb9,
	0xa0, 0xeb, 0xa0, 0x39, 0x6a, 0x8e, 0x3b, 0xa1, 0x39, 0x62, 0x00, 0xed, 0x05, 0xcd, 0x52, 0xa1,
	0x64, 0xb0, 0x35, 0x6a, 0x8e, 0xdd, 0x70, 0x19, 0xe2, 0x00, 0x5a, 0x8b, 0x28, 0x99, 0x53, 0x1a,
	0x38, 0x23, 0x67, 0xdc, 0x0d, 0xf3, 0x88, 0x09, 0xf0, 0xbf, 0x88, 0x54, 0x87, 0x74, 0x35, 0xa7,
	0x54, 0x1b, 0xd9, 0x74, 0x46, 0xbf, 0xc5, 0x9f, 0xdc, 0x35, 0x8f, 0x10, 0xc1, 0x4d, 0x2f, 0xc4,
	0xd4, 0xba, 0xee, 0x84, 0xf6, 0x8c, 0x7b, 0xe0, 0x25, 0xe2, 0x52, 0xe8, 0xc0, 0xb1, 0xc9, 0x2c,
	0x28, 0xb7, 0xe0, 0x56, 0x5a, 0x60, 0xe7, 0xb0, 0xf3, 0x2d, 0x3a, 0xa7, 0xd8, 0xf4, 0x6e, 0xee,
	0x2c, 0x4b, 0x9b, 0xd5, 0x6e, 0x9f, 0x80, 0xaf, 0x95, 0x8e, 0x92, 0x9f, 0x67, 0x6a, 0x2e, 0x75,
	0x7e, 0x2b, 0xd8, 0xd4, 0x07, 0x93, 0xc1, 0x47, 0xe0, 0x49, 0x15, 0xe7, 0xaf, 0xf1, 0x0f, 0x3c,
	0x6e, 0x4c, 0xc3, 0x2c, 0xc7, 0xf6, 0xa1, 0xf3, 0xf1, 0xe8, 0x34, 0xb7, 0x5a, 0x7b, 0x09, 0x7b,
	0x0c, 0x70, 0x4c, 0xab, 0x97, 0xdf, 0x18, 0x26, 0x7b, 0x03, 0xbd, 0x13, 0xd2, 0xa7, 0x66, 0x4e,
	0x6b, 0x45, 0xa5, 0xb9, 0x6e, 0x55, 0xe6, 0xfa, 0x1a, 0x7a, 0x93, 0x38, 0xfe, 0x4f, 0xf1, 0x1e,
	0x78, 0x56, 0x6e, 0x1f, 0xd8, 0x0d, 0xb3, 0x80, 0xbd, 0x83, 0x07, 0x93, 0x38, 0xfe, 0x2e, 0xc5,
	0xd5, 0x9c, 0x36, 0x32, 0x78, 0x0b, 0x18, 0xd2, 0xa5, 0x5a, 0x6c, 0x56, 0xfd, 0x1e, 0x06, 0x59,
	0xf5, 0x24, 0x49, 0xac, 0x41, 0x7a, 0x57, 0x87, 0x67, 0xd0, 0xcf, 0x1c, 0x3e, 0xd3, 0xf5, 0xfa,
	0xf1, 0xb6, 0xcc, 0x16, 0x4b, 0x3a, 0xf8, 0xeb, 0x40, 0xfb, 0x84, 0x66, 0x0b, 0x71, 0x46, 0xf8,
	0x1c, 0x5c, 0xbb, 0x19, 0x5d, 0x5e, 0x5a, 0xca, 0xe1, 0x2e, 0xaf, 0xec, 0x0d, 0x6b, 0xe0, 0x53,
	0x8b, 0x6e, 0x89, 0xd8, 0xd0, 0x97, 0x34, 0x04, 0xbe, 0xa2, 0xce, 0x1a, 0x38, 0x82, 0xed, 0xe3,
	0x9c, 0x1e, 0xfa, 0xbc, 0x00, 0x3d, 0xcc, 0x76, 0x85, 0x35, 0x70, 0x1f, 0xb6, 0x97, 0x7c, 0xb1,
	0xcf, 0x6b, 0xa8, 0x2b, 0xb2, 0x25, 0x49, 0xec, 0xf3, 0x1a, 0xd4, 0x42, 0xf6, 0x0a, 0x76, 0xab,
	0xd4, 0x70, 0xc0, 0x6f, 0xc5, 0x58, 0x94, 0xbc, 0x04, 0xbf, 0xc4, 0x09, 0xef, 0xf3, 0x9b, 0xd4,
	0x0a, 0xf1, 0x21, 0xf4, 0x6a, 0x58, 0xf0, 0x21, 0xbf, 0x1d, 0x54, 0x51, 0xf4, 0x02, 0x3a, 0x2b,
	0x12, 0x78, 0x8f, 0xd7, 0xa9, 0x0c, 0xb3, 0xc9, 0xb1, 0xc6, 0x51, 0xfb, 0x87, 0x67, 0xff, 0x2d,
	0xbf, 0x5a, 0xf6, 0x73, 0xf8, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x62, 0x41, 0x30, 0x3b, 0x71, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	// List returns paged list of DB keys (with values)
	// Optionally list might be filtered by key prefix
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*PagedNodeList, error)
	// GetVersion returns current data version
	GetVersion(ctx context.Context, in *None, opts ...grpc.CallOption) (*DBVersion, error)
	// GetValue gets a node value by its key
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	GetValue(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Node, error)
	// SetValue sets a node value, rewritting its value if node already exists
	// If specified node doesn't exists, it will be created
	SetValue(ctx context.Context, in *SetValueRequest, opts ...grpc.CallOption) (*Node, error)
	// AddValue defines an "append value" operation
	// If specified node doesn't exists, it will be created
	// A specified value will be added to node even if it already exists
	AddValue(ctx context.Context, in *AddValueRequest, opts ...grpc.CallOption) (*Node, error)
	// AddUniqueValue defines an "append value" operation
	// If specified node doesn't exists, it will be created
	// If node already contains the same value and "unique" parameter is set to "true", a ErrDuplicateValue error is returned
	AddUniqueValue(ctx context.Context, in *AddUniqueValueRequest, opts ...grpc.CallOption) (*Node, error)
	// RemoveValue defines an "remove value" operation
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	// If specified value doesn't exist within a node, a ErrNoSuchValue error is returned
	RemoveValue(ctx context.Context, in *RemoveValueRequest, opts ...grpc.CallOption) (*Node, error)
	// RemoveAllValues defines an "remove value" operation
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	// If node contains specified value multiple times, all values are removed
	// If specified value doesn't exist within a node, a ErrNoSuchValue error is returned
	RemoveAllValues(ctx context.Context, in *RemoveAllValuesRequest, opts ...grpc.CallOption) (*Node, error)
	// RemoveKey removes a key completely
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	RemoveKey(ctx context.Context, in *RemoveKeyRequest, opts ...grpc.CallOption) (*None, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*PagedNodeList, error) {
	out := new(PagedNodeList)
	err := c.cc.Invoke(ctx, "/Service/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetVersion(ctx context.Context, in *None, opts ...grpc.CallOption) (*DBVersion, error) {
	out := new(DBVersion)
	err := c.cc.Invoke(ctx, "/Service/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetValue(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/GetValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SetValue(ctx context.Context, in *SetValueRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/SetValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) AddValue(ctx context.Context, in *AddValueRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/AddValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) AddUniqueValue(ctx context.Context, in *AddUniqueValueRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/AddUniqueValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) RemoveValue(ctx context.Context, in *RemoveValueRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/RemoveValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) RemoveAllValues(ctx context.Context, in *RemoveAllValuesRequest, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/Service/RemoveAllValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) RemoveKey(ctx context.Context, in *RemoveKeyRequest, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/Service/RemoveKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	// List returns paged list of DB keys (with values)
	// Optionally list might be filtered by key prefix
	List(context.Context, *ListRequest) (*PagedNodeList, error)
	// GetVersion returns current data version
	GetVersion(context.Context, *None) (*DBVersion, error)
	// GetValue gets a node value by its key
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	GetValue(context.Context, *GetRequest) (*Node, error)
	// SetValue sets a node value, rewritting its value if node already exists
	// If specified node doesn't exists, it will be created
	SetValue(context.Context, *SetValueRequest) (*Node, error)
	// AddValue defines an "append value" operation
	// If specified node doesn't exists, it will be created
	// A specified value will be added to node even if it already exists
	AddValue(context.Context, *AddValueRequest) (*Node, error)
	// AddUniqueValue defines an "append value" operation
	// If specified node doesn't exists, it will be created
	// If node already contains the same value and "unique" parameter is set to "true", a ErrDuplicateValue error is returned
	AddUniqueValue(context.Context, *AddUniqueValueRequest) (*Node, error)
	// RemoveValue defines an "remove value" operation
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	// If specified value doesn't exist within a node, a ErrNoSuchValue error is returned
	RemoveValue(context.Context, *RemoveValueRequest) (*Node, error)
	// RemoveAllValues defines an "remove value" operation
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	// If node contains specified value multiple times, all values are removed
	// If specified value doesn't exist within a node, a ErrNoSuchValue error is returned
	RemoveAllValues(context.Context, *RemoveAllValuesRequest) (*Node, error)
	// RemoveKey removes a key completely
	// If specified node doesn't exist, a ErrNoSuchKey error is returned
	RemoveKey(context.Context, *RemoveKeyRequest) (*None, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetVersion(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/GetValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetValue(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_SetValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).SetValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/SetValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).SetValue(ctx, req.(*SetValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_AddValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).AddValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/AddValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).AddValue(ctx, req.(*AddValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_AddUniqueValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUniqueValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).AddUniqueValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/AddUniqueValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).AddUniqueValue(ctx, req.(*AddUniqueValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_RemoveValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).RemoveValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/RemoveValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).RemoveValue(ctx, req.(*RemoveValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_RemoveAllValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAllValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).RemoveAllValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/RemoveAllValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).RemoveAllValues(ctx, req.(*RemoveAllValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_RemoveKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).RemoveKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Service/RemoveKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).RemoveKey(ctx, req.(*RemoveKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Service_List_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _Service_GetVersion_Handler,
		},
		{
			MethodName: "GetValue",
			Handler:    _Service_GetValue_Handler,
		},
		{
			MethodName: "SetValue",
			Handler:    _Service_SetValue_Handler,
		},
		{
			MethodName: "AddValue",
			Handler:    _Service_AddValue_Handler,
		},
		{
			MethodName: "AddUniqueValue",
			Handler:    _Service_AddUniqueValue_Handler,
		},
		{
			MethodName: "RemoveValue",
			Handler:    _Service_RemoveValue_Handler,
		},
		{
			MethodName: "RemoveAllValues",
			Handler:    _Service_RemoveAllValues_Handler,
		},
		{
			MethodName: "RemoveKey",
			Handler:    _Service_RemoveKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "natan.proto",
}
